DROP TABLE IF EXISTS users CASCADE;
DROP TABLE IF EXISTS category CASCADE;
DROP TABLE IF EXISTS event CASCADE;
DROP TABLE IF EXISTS location CASCADE;
DROP TABLE IF EXISTS request CASCADE;
DROP TABLE IF EXISTS compilation CASCADE;
DROP TABLE IF EXISTS compilation_event CASCADE;

CREATE TABLE IF NOT EXISTS users
(
    user_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    email   VARCHAR(50)                             NOT NULL,
    name    VARCHAR(30)                             NOT NULL,
    CONSTRAINT pk_user_id PRIMARY KEY (user_id),
    CONSTRAINT uq_email UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS category
(
    category_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name        VARCHAR(30)                             NOT NULL,
    CONSTRAINT pk_category_id PRIMARY KEY (category_id),
    CONSTRAINT uq_category_name UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS location
(
    location_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    lat         REAL                                    NOT NULL,
    lon         REAL                                    NOT NULL,
    CONSTRAINT pk_location_id PRIMARY KEY (location_id)
);

CREATE TABLE IF NOT EXISTS event
(
    event_id           BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    annotation         TEXT                                    NOT NULL,
    category_id        BIGINT                                  NOT NULL,
    created_on         TIMESTAMP WITHOUT TIME ZONE,
    description        TEXT,
    event_date         TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    initiator_id       BIGINT                                  NOT NULL,
    location_id        BIGINT                                  NOT NULL,
    paid               BOOLEAN,
    participant_limit  BIGINT,
    published_on       TIMESTAMP WITHOUT TIME ZONE,
    request_moderation BOOLEAN,
    state              VARCHAR(30) DEFAULT 'PENDING',
    title              VARCHAR(100),
    CONSTRAINT pk_event_id PRIMARY KEY (event_id),
    CONSTRAINT fk_event_category_id FOREIGN KEY (category_id) REFERENCES category (category_id),
    CONSTRAINT fk_event_initiator_id FOREIGN KEY (initiator_id) REFERENCES users (user_id),
    CONSTRAINT fk_event_location_id FOREIGN KEY (location_id) REFERENCES location (location_id) ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS request
(
    request_id   BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    created      TIMESTAMP WITHOUT TIME ZONE,
    requester_id BIGINT                                  NOT NULL,
    event_id     BIGINT                                  NOT NULL,
    status       VARCHAR(30) DEFAULT 'PENDING',
    CONSTRAINT pk_request_id PRIMARY KEY (request_id),
    CONSTRAINT fk_request_user_id FOREIGN KEY (requester_id) REFERENCES users (user_id) ON DELETE CASCADE,
    CONSTRAINT fk_request_event_id FOREIGN KEY (event_id) REFERENCES event (event_id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS compilation
(
    compilation_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    pinned         BOOLEAN DEFAULT 'FALSE',
    title          TEXT                                    NOT NULL,
    CONSTRAINT pk_compilation_id PRIMARY KEY (compilation_id),
    CONSTRAINT uq_compilation_name UNIQUE (title)
);

CREATE TABLE IF NOT EXISTS compilation_event
(
    compilation_id BIGINT,
    event_id       BIGINT,
    CONSTRAINT fk_ce_compilation_id FOREIGN KEY (compilation_id) REFERENCES compilation (compilation_id) ON DELETE CASCADE ON UPDATE CASCADE ,
    CONSTRAINT fk_ce_event_id FOREIGN KEY (event_id) REFERENCES event (event_id) ON DELETE CASCADE ON UPDATE CASCADE
)
